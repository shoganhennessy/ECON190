# Residuals table
# Title : Inequality Measures Based on Regression Model Residuals for Hourly Wage


# Prediction methods 1. Mincer
CPS.data <- fread('CPS_data.csv', header = T, sep = ',')

Variable_residuals <- id <- c()

#Form model with
years <- c(c(1980:2007), c(2009:2016))
for (i in years){
  print(i)
  year <- c(year, i)
  CPS_mincer.reg <- CPS.data %>% subset(year==i) %>%
    lm( log(rhrwage) ~ education + I(age-education-6) + I((age-education-6)^2), 
        data=.)
  Variable_residuals <- c(Variable_residuals, 
                          CPS_mincer.reg$residuals)
  id <- c(id, subset(CPS.data, year==i)$id)
}

CPS.data <- dplyr::right_join(data_frame(Variable_residuals, id), 
                              CPS.data, by = 'id')
rm(Mincer_predicted_rhrwage, Variable_residuals, id)

# Form fixed residual distribution
CPS.data$Mincer_resid_percentile <- ecdf(
  CPS.data$Variable_residuals)(CPS.data$Variable_residuals)

CPS.data$Mincer_fixed_resid_rhrwage <- quantile(Mincer_residuals_rhrwage, 
                                                probs = CPS.data$Mincer_resid_percentile, 
                                                na.rm = TRUE,
                                                names = FALSE)

# Save Y1, Y2, Y3
CPS.data$Mincer_Y1_rhrwage <- predict(CPS_mincer1.reg, CPS.data)
#CPS.data$Mincer_fixed_resid_rhrwage

CPS.data$Mincer_Y2_rhrwage <- CPS.data$Mincer_predicted_rhrwage
#CPS.data$Mincer_fixed_resid_rhrwage

CPS.data$Mincer_Y3_rhrwage <- CPS.data$Mincer_predicted_rhrwage + 
  CPS.data$Variable_residuals

years <- c(1980, 1985, 1990, 1995, 2000, 2005, 2010)

# storer to make a matrix for a LaTeX table
residual_store <- c()

log_wage_equation <- log(rhrwage) ~ age + female + race + 
  married + rural + suburb + centcity + selfemp + education

set.seed(47)
for (i in years){
  print(i)
  CPS_subset.data <- subset(CPS.data, year>=i & year<(i+5))
  if (i==2010){
    CPS_subset.data <- subset(CPS.data, year>=i & year<(i+7))
  }
  errors <- CPS_subset.data$Variable_residuals
  sd <- sd(errors)
  q_90 <- quantile(errors, probs = 0.9)  
  q_50 <- quantile(errors, probs = 0.5)  
  q_10 <- quantile(errors, probs = 0.1)  
  residual_store <- c(residual_store, sd, 
                      (q_90 - q_10), (q_90 - q_50), (q_50 - q_10))
}

residual_store <- format(round(residual_store, 2), nsmall = 2)

residual_store1 <- c('Model 1.', '', '', '', 
                     'S.d.', '90-10', '90-50', '50-10',
                     residual_store)

residual_store1 <- matrix(residual_store1, nrow=4, ncol=9)
tab <- xtable(residual_store1, comment=FALSE)
print(tab, type="latex", include.rownames = FALSE, include.colnames = FALSE)









# Prediction methods 2. Adjusted Mincer
CPS.data <- fread('CPS_data.csv', header = T, sep = ',')

Variable_residuals <- id <- c()

#Form model with
years <- c(c(1980:2007), c(2009:2016))
for (i in years){
  print(i)
  year <- c(year, i)
  CPS_mincer.reg <- CPS.data %>% subset(year==i) %>%
    lm( log(rhrwage) ~ I(education) + I(education^2) +
          I(age-education-6) + I((age-education-6)^2) +
          I((age-education-6)^3) + I((age-education-6)^4), 
        data=.)
  Variable_residuals <- c(Variable_residuals, 
                          CPS_mincer.reg$residuals)
  id <- c(id, subset(CPS.data, year==i)$id)
}

CPS.data <- dplyr::right_join(data_frame(Variable_residuals, id), 
                              CPS.data, by = 'id')
rm(Variable_residuals, id)

years <- c(1980, 1985, 1990, 1995, 2000, 2005, 2010)

# storer to make a matrix for a LaTeX table
residual_store <- c()

log_wage_equation <- log(rhrwage) ~ age + female + race + 
  married + rural + suburb + centcity + selfemp + education

set.seed(47)
for (i in years){
  print(i)
  CPS_subset.data <- subset(CPS.data, year>=i & year<(i+5))
  if (i==2010){
    CPS_subset.data <- subset(CPS.data, year>=i & year<(i+7))
  }
  errors <- CPS_subset.data$Variable_residuals
  sd <- sd(errors)
  q_90 <- quantile(errors, probs = 0.9)  
  q_50 <- quantile(errors, probs = 0.5)  
  q_10 <- quantile(errors, probs = 0.1)  
  residual_store <- c(residual_store, sd, 
                      (q_90 - q_10), (q_90 - q_50), (q_50 - q_10))
}

residual_store <- format(round(residual_store, 2), nsmall = 2)

residual_store1 <- c('Model 2.', '', '', '', 
                     'S.d.', '90-10', '90-50', '50-10',
                     residual_store)

residual_store1 <- matrix(residual_store1, nrow=4, ncol=9)
tab <- xtable(residual_store1, comment=FALSE)
print(tab, type="latex", include.rownames = FALSE, include.colnames = FALSE)







# Prediction methods 3. Random Forest
set.seed(47)

CPS.data <- fread('CPS_data.csv', header = T, sep = ',')

Variable_residuals <- id <- c()

#Form model with
years <- c(c(1980:2007), c(2009:2016))
for (i in years){
  print(i)
  year <- c(year, i)
  CPS_mincer.reg <- CPS.data %>% subset(year==i) %>%
    train(log_wage_equation ,
          preProcess=c('center', 'scale'),
          data = . , 
          method = 'rf' , 
          trControl = trainControl(method='oob'), 
          tuneGrid = data.frame(mtry = c(4)),
          na.action = na.pass, importance = F,
          metric='RMSE')
  Variable_residuals <- c(Variable_residuals, 
                          log(subset(CPS.data, year==i)$rhrwage) - predict(CPS_mincer.reg))
  id <- c(id, subset(CPS.data, year==i)$id)
}

CPS.data <- dplyr::right_join(data_frame(Variable_residuals, id), 
                              CPS.data, by = 'id')
rm(Variable_residuals, id)

years <- c(1980, 1985, 1990, 1995, 2000, 2005, 2010)

# storer to make a matrix for a LaTeX table
residual_store <- c()

log_wage_equation <- log(rhrwage) ~ age + female + race + 
  married + rural + suburb + centcity + selfemp + education

set.seed(47)
for (i in years){
  print(i)
  CPS_subset.data <- subset(CPS.data, year>=i & year<(i+5))
  if (i==2010){
    CPS_subset.data <- subset(CPS.data, year>=i & year<(i+7))
  }
  errors <- CPS_subset.data$Variable_residuals
  sd <- sd(errors)
  q_90 <- quantile(errors, probs = 0.9)  
  q_50 <- quantile(errors, probs = 0.5)  
  q_10 <- quantile(errors, probs = 0.1)  
  residual_store <- c(residual_store, sd, 
                      (q_90 - q_10), (q_90 - q_50), (q_50 - q_10),
                      length(errors))
}

residual_store <- format(round(residual_store, 2), nsmall = 2)

residual_store1 <- c('Model 3.', '', '', '', 'Observations',
                     'S.d.', '90-10', '90-50', '50-10', '',
                     residual_store)

residual_store1 <- matrix(residual_store1, nrow=5, ncol=9)
tab <- xtable(residual_store1, comment=FALSE)
print(tab, type="latex", include.rownames = FALSE, include.colnames = FALSE)
